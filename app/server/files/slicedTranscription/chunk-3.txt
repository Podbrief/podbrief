e all the pyramids. There's pyramids throughout the world. I know, but those in particular are the ones in the website I just referenced. Well, sure. Let's use the Giza ones then. So you're saying that today's technology and engineering couldn't create those? They yeah, not the same way. No. Not the same way or to the same, could they fashion the same product? They can't figure it out. There's pictures of like large cranes that should like carry lots of weight, like topple over trying to pick those kind of stones up. That's how big they are. Okay. What do you think, John? Those are crazy old. I was just thinking sort of a tangent, but like we know things are old, but like part of the archive program, thinking in a thousand year sort of stance, I started thinking about just how old things are. So a thousand years is a very long time, right? Like ancient roads, like Great Zimbabwe and Angkor Wat, they had not even been built yet a thousand years ago. Right. The pyramids are much, much older than that. Like when Herodotus, the ancient Greek went to visit the pyramids, they were as old as hit to him as he is to us today. They are 4,000 years old, which is insane. Like how do they do anything on that scale, 4,000 years ago? Maybe they're quite a bit more advanced than we give credit to. I mean, they were as smart as us, right? There are a lot of really good engineers. Clearly, maybe even better engineers, if that is to be correct, that we can't even build a not even a facsimile, like the same artifact, different techniques. I don't know. I don't think we could get it done, but yeah, who am I, except for probably not in the cost effective way there. Well, cost effective ways never stopped us from doing stuff before, has it, John? That's true. Even the thing about magnets, like aren't magnets the wonder of the world? Something as simple as a magnet? They absolutely are. I mean, these things are just, I was looking at it, it's like harmonics, I believe is the word used. I can't even find it. I'm just so upset about it. Oh, here it is. C-Y-M-A-T-I-C-S, cymatics. Is this like language, essentially, in sound?
Look into it. It'll blow your mind. Okay. So this is not quite the same thing, but in terms of things we don't understand that will blow your mind, three days ago in the New York Times, there was this opinion piece by an astrophysicist saying, like, our standard model of physics doesn't work. The more information we get from like the Hubble telescope and so forth, the more it doesn't fit in line with what we have. And there's this amazing quote. One possibility, raised by the physicist Lee Small and the philosopher Roberto Unger, is that the laws of physics can evolve and change over time. Different laws might even compete for effectiveness. So like this is an actual proposal being proposed by an actual astrophysicist in the New York Times three days ago. We live in a very strange universe is all I'm saying. Maybe the laws are also changing over time. Okay. Exactly. Yeah. Well, a comedian, I was almost going to tell you guys this as truth, but I think it's actually just hyperbole for a comedian's sake. Because it's one of those folks that are, I don't know, like the content creator. They seem, before you look into them further, like they're telling the truth or they're really unearthing some deep, dark secrets, basically. But it's really just a comedian. It's a bit, essentially. But he basically said, you know, what if Isaac Newton didn't actually discover gravity, that gravity in that very moment changed and he discovered it. Before then, gravity was different. You know, like the laws of physics changed immediately for him to discover gravity. Publish that in the New York Times. Put it in the New York Times. Yeah. There's a science fiction writer called Greg Egan who writes about stuff like this. Like in one of his books, some mathematician comes up with like a mathematical representation of the universe, which is more efficient than our universe. And the universe is like, yes, thank you. We'll do that. Goodbye to the old universe. We're taking over the new maths now. And so he thinks of himself out of existence. So yes, science fiction is covered on this, if it's any consolation. Interesting. So... Well, I mean, it's interesting because sometimes life imitates art and we see things like, you know, the tricorder or the different things in Star Trek from the 80s and the 90s. And then we see things like smartphones, you know. And sometimes people pull direct revelation from science fiction, maybe even people named Zuckerberg, right? So like the metaverse is a thing in a book written, was it Neil Stevenson? I can't remember the book now. Snow Crash. And it was a dystopia though, wasn't it? I think it was a dystopia. Totally. It was not portrayed as a happy future. Yeah. And Zuckerberg just missed the mark there, pun intended, and decided he was going to name metaverse. Now we have a concept called metaverse. So sometimes it's like directly. And then other times, art imitates life. And so where do the science fiction writers get their ideas? And John, you are one. So I could ask Adam that and he could guess, but I could ask you and you could tell me directly, like, where does your AI either doom or utopic views that you end up putting into these books that are described as weird and just continually weird, where do they come from? Well, I think I'm writing software science fiction. Like there's a review that came out that said the branch of science in this particular science fiction novel is computer science. Because I'm a software guy. But also computers are the world, right? Software mediates everything we do. This conversation, every text message, most of the news you read. We live in a software mediated universe. So I'm playing with the notion of a programmable software universe. Like the fundamental substrate of reality is more like software than like hardware. That's not that different from the world we actually live in anyways, right? On a day to day basis. So I think like, you know, there used to be a lot of space travel science fiction in the seventies and eighties when we had, you know, the Apollo program. And nowadays there's going to be, I think, a lot of software and computer science fiction. Then we'll get into like the biotech science fiction in 10 or 20 years. I think people adopt wherever, like the big engine of change and the big changes that are happening in the world around them. So you're pulling it out of the software world. That's cool. What's up friends. I'm here with one of our sponsors over at Tailscale, Jeremy Tanner, part of the DevRel team. Jeremy, one of the things that I used to do a lot in my home lab is I would set static IP addresses for particular devices so I can easily remember them, mainly so I can access them via SSH or via the web if the service has a web interface. But because I install Tailscale on every machine now, I don't need to do that anymore. Number one, I was able to get a short, memorable tail net name. And then two, each device gets assigned a machine name based on the host name of that machine when Tailscale is initialized. And between those two features, I no longer have to remember or care about specific local IP addresses anymore. I just let DHCP do its thing and Tailscale does the rest. Yeah. You'd mentioned the enjoyment of not having to worry about IP addresses. Usually when you plug in and DHCP gives you an IP address in the range that it thinks appropriate for that particular network, that becomes a much bigger problem when you mail a machine somewhere, when you connect from somewhere else. But having that stable, both the Tailscale IP address and the domain name and being able to get to a machine by its host name doesn't change for the network that it's on. That's somewhat rare. Prior to Tailscale, I had not had that experience. It was always having something send you a heartbeat back or fishing for it, or if it's sitting out there behind Nat trying to cook up a way to find that machine the first time when it comes up. Mostly I'm installing Tailscale on Linux. Yes, I use it on my Mac machines as well as my iOS devices, but, you know, App Store, pretty easy. In the case of Linux, you know, you have the one command install that you can do, which is just piping an install script into your bash and then running that. But you got to trust that, right? And I prefer to do things more manually. I do that with Docker. I do that with Tailscale. And so the fact that you all provide not only this one command to use, but also based upon the flavor of Linux, a manual install process and instructions. I just love that. What are your thoughts on that thoughtfulness? We're about meeting people where they are. And so if you're someone who wants to build from source, you're obviously welcome to. Many different distros use different package managers. And so it's like, here's the name of your package manager, if it's less familiar, and here's the fastest way to go. A lot of the time we can sense what that is. And so, yeah, if you curl the install script, you can pipe that right into the shell. I'm usually very cautious of that. And so whether you have a view script source, which is an easy way to look, or if you download first or view the contents of the script before running it, I mean, I would always recommend that everyone do that and not blindly pipe into your shell. But once you do know that that's trustworthy, that enables automation. And so your Linux distros that have a cloud in it, in them, when you bring up a machine for the first time, if you have a single line that installs, then the next line can be tail scale up with the flags that say, here's a node key, join my tail net immediately, the SSH flag, make this machine available via tail scale SSH, advertise exit node flag, let me send secure traffic to this machine, and then out onto the public internet. And so if you're at a hotel, a coffee shop, anywhere with a connection that you don't trust your end of, you're able to get to a place that you do trust, whether that's your home, whether that's a data center, whether that's your office, anywhere else. Yes, anywhere is correct. I love tail scale. I hope you listeners will check it out. If you run your own home lab, or you have some influence over the networking that you all do with your applications, there's so much more you can do with tail scale at the enterprise level. Of course, we're just talking about basic home features, but these are building blocks, the magic that is tail scale, and tail nets and all the fun stuff they enable for you and your applications, your home lab, wherever tail scale is awesome. Check them out. You can do so at changelog.com slash tail scale. Again, changelog.com slash tail scale. That's t a i l s c a l e. Enjoy. I have an idea for you. Pitch session. Here we go. I'm going to ruin it too, because you're not going 